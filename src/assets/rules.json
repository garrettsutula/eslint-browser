[{"name":"accessor-pairs","type":"suggestion","description":"enforce getter and setter pairs in objects","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/accessor-pairs"},{"name":"array-bracket-newline","type":"layout","description":"enforce linebreaks after opening and before closing array brackets","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/array-bracket-newline"},{"name":"array-bracket-spacing","type":"layout","description":"enforce consistent spacing inside array brackets","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/array-bracket-spacing"},{"name":"array-callback-return","type":"problem","description":"enforce `return` statements in callbacks of array methods","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/array-callback-return"},{"name":"array-element-newline","type":"layout","description":"enforce line breaks after each array element","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/array-element-newline"},{"name":"arrow-body-style","type":"suggestion","description":"require braces around arrow function bodies","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/arrow-body-style"},{"name":"arrow-parens","type":"layout","description":"require parentheses around arrow function arguments","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/arrow-parens"},{"name":"arrow-spacing","type":"layout","description":"enforce consistent spacing before and after the arrow in arrow functions","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/arrow-spacing"},{"name":"block-scoped-var","type":"suggestion","description":"enforce the use of variables within the scope they are defined","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/block-scoped-var"},{"name":"block-spacing","type":"layout","description":"disallow or enforce spaces inside of blocks after opening block and before closing block","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/block-spacing"},{"name":"brace-style","type":"layout","description":"enforce consistent brace style for blocks","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/brace-style"},{"name":"callback-return","type":"suggestion","description":"require `return` statements after callbacks","category":"Node.js and CommonJS","recommended":null,"url":"https://eslint.org/docs/rules/callback-return"},{"name":"camelcase","type":"suggestion","description":"enforce camelcase naming convention","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/camelcase"},{"name":"capitalized-comments","type":"suggestion","description":"enforce or disallow capitalization of the first letter of a comment","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/capitalized-comments"},{"name":"class-methods-use-this","type":"suggestion","description":"enforce that class methods utilize `this`","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/class-methods-use-this"},{"name":"comma-dangle","type":"layout","description":"require or disallow trailing commas","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/comma-dangle"},{"name":"comma-spacing","type":"layout","description":"enforce consistent spacing before and after commas","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/comma-spacing"},{"name":"comma-style","type":"layout","description":"enforce consistent comma style","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/comma-style"},{"name":"complexity","type":"suggestion","description":"enforce a maximum cyclomatic complexity allowed in a program","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/complexity"},{"name":"computed-property-spacing","type":"layout","description":"enforce consistent spacing inside computed property brackets","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/computed-property-spacing"},{"name":"consistent-return","type":"suggestion","description":"require `return` statements to either always or never specify values","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/consistent-return"},{"name":"consistent-this","type":"suggestion","description":"enforce consistent naming when capturing the current execution context","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/consistent-this"},{"name":"constructor-super","type":"problem","description":"require `super()` calls in constructors","category":"ECMAScript 6","recommended":true,"url":"https://eslint.org/docs/rules/constructor-super"},{"name":"curly","type":"suggestion","description":"enforce consistent brace style for all control statements","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/curly"},{"name":"default-case","type":"suggestion","description":"require `default` cases in `switch` statements","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/default-case"},{"name":"dot-location","type":"layout","description":"enforce consistent newlines before and after dots","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/dot-location"},{"name":"dot-notation","type":"suggestion","description":"enforce dot notation whenever possible","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/dot-notation"},{"name":"eol-last","type":"layout","description":"require or disallow newline at the end of files","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/eol-last"},{"name":"eqeqeq","type":"suggestion","description":"require the use of `===` and `!==`","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/eqeqeq"},{"name":"for-direction","type":"problem","description":"enforce \"for\" loop update clause moving the counter in the right direction.","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/for-direction"},{"name":"func-call-spacing","type":"layout","description":"require or disallow spacing between function identifiers and their invocations","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/func-call-spacing"},{"name":"func-name-matching","type":"suggestion","description":"require function names to match the name of the variable or property to which they are assigned","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/func-name-matching"},{"name":"func-names","type":"suggestion","description":"require or disallow named `function` expressions","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/func-names"},{"name":"func-style","type":"suggestion","description":"enforce the consistent use of either `function` declarations or expressions","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/func-style"},{"name":"function-paren-newline","type":"layout","description":"enforce consistent line breaks inside function parentheses","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/function-paren-newline"},{"name":"generator-star-spacing","type":"layout","description":"enforce consistent spacing around `*` operators in generator functions","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/generator-star-spacing"},{"name":"getter-return","type":"problem","description":"enforce `return` statements in getters","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/getter-return"},{"name":"global-require","type":"suggestion","description":"require `require()` calls to be placed at top-level module scope","category":"Node.js and CommonJS","recommended":null,"url":"https://eslint.org/docs/rules/global-require"},{"name":"guard-for-in","type":"suggestion","description":"require `for-in` loops to include an `if` statement","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/guard-for-in"},{"name":"handle-callback-err","type":"suggestion","description":"require error handling in callbacks","category":"Node.js and CommonJS","recommended":null,"url":"https://eslint.org/docs/rules/handle-callback-err"},{"name":"id-blacklist","type":"suggestion","description":"disallow specified identifiers","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/id-blacklist"},{"name":"id-length","type":"suggestion","description":"enforce minimum and maximum identifier lengths","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/id-length"},{"name":"id-match","type":"suggestion","description":"require identifiers to match a specified regular expression","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/id-match"},{"name":"implicit-arrow-linebreak","type":"layout","description":"enforce the location of arrow function bodies","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/implicit-arrow-linebreak"},{"name":"indent-legacy","type":"layout","description":"enforce consistent indentation","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/indent-legacy"},{"name":"indent","type":"layout","description":"enforce consistent indentation","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/indent"},{"name":"init-declarations","type":"suggestion","description":"require or disallow initialization in variable declarations","category":"Variables","recommended":null,"url":"https://eslint.org/docs/rules/init-declarations"},{"name":"jsx-quotes","type":"layout","description":"enforce the consistent use of either double or single quotes in JSX attributes","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/jsx-quotes"},{"name":"key-spacing","type":"layout","description":"enforce consistent spacing between keys and values in object literal properties","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/key-spacing"},{"name":"keyword-spacing","type":"layout","description":"enforce consistent spacing before and after keywords","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/keyword-spacing"},{"name":"line-comment-position","type":"layout","description":"enforce position of line comments","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/line-comment-position"},{"name":"linebreak-style","type":"layout","description":"enforce consistent linebreak style","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/linebreak-style"},{"name":"lines-around-comment","type":"layout","description":"require empty lines around comments","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/lines-around-comment"},{"name":"lines-around-directive","type":"layout","description":"require or disallow newlines around directives","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/lines-around-directive"},{"name":"lines-between-class-members","type":"layout","description":"require or disallow an empty line between class members","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/lines-between-class-members"},{"name":"max-classes-per-file","type":"suggestion","description":"enforce a maximum number of classes per file","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/max-classes-per-file"},{"name":"max-depth","type":"suggestion","description":"enforce a maximum depth that blocks can be nested","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/max-depth"},{"name":"max-len","type":"layout","description":"enforce a maximum line length","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/max-len"},{"name":"max-lines-per-function","type":"suggestion","description":"enforce a maximum number of line of code in a function","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/max-lines-per-function"},{"name":"max-lines","type":"suggestion","description":"enforce a maximum number of lines per file","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/max-lines"},{"name":"max-nested-callbacks","type":"suggestion","description":"enforce a maximum depth that callbacks can be nested","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/max-nested-callbacks"},{"name":"max-params","type":"suggestion","description":"enforce a maximum number of parameters in function definitions","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/max-params"},{"name":"max-statements-per-line","type":"layout","description":"enforce a maximum number of statements allowed per line","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/max-statements-per-line"},{"name":"max-statements","type":"suggestion","description":"enforce a maximum number of statements allowed in function blocks","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/max-statements"},{"name":"multiline-comment-style","type":"suggestion","description":"enforce a particular style for multiline comments","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/multiline-comment-style"},{"name":"multiline-ternary","type":"layout","description":"enforce newlines between operands of ternary expressions","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/multiline-ternary"},{"name":"new-cap","type":"suggestion","description":"require constructor names to begin with a capital letter","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/new-cap"},{"name":"new-parens","type":"layout","description":"require parentheses when invoking a constructor with no arguments","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/new-parens"},{"name":"newline-after-var","type":"layout","description":"require or disallow an empty line after variable declarations","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/newline-after-var"},{"name":"newline-before-return","type":"layout","description":"require an empty line before `return` statements","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/newline-before-return"},{"name":"newline-per-chained-call","type":"layout","description":"require a newline after each call in a method chain","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/newline-per-chained-call"},{"name":"no-alert","type":"suggestion","description":"disallow the use of `alert`, `confirm`, and `prompt`","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-alert"},{"name":"no-array-constructor","type":"suggestion","description":"disallow `Array` constructors","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-array-constructor"},{"name":"no-async-promise-executor","type":"problem","description":"disallow using an async function as a Promise executor","category":"Possible Errors","recommended":null,"url":"https://eslint.org/docs/rules/no-async-promise-executor"},{"name":"no-await-in-loop","type":"problem","description":"disallow `await` inside of loops","category":"Possible Errors","recommended":null,"url":"https://eslint.org/docs/rules/no-await-in-loop"},{"name":"no-bitwise","type":"suggestion","description":"disallow bitwise operators","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-bitwise"},{"name":"no-buffer-constructor","type":"problem","description":"disallow use of the `Buffer()` constructor","category":"Node.js and CommonJS","recommended":null,"url":"https://eslint.org/docs/rules/no-buffer-constructor"},{"name":"no-caller","type":"suggestion","description":"disallow the use of `arguments.caller` or `arguments.callee`","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-caller"},{"name":"no-case-declarations","type":"suggestion","description":"disallow lexical declarations in case clauses","category":"Best Practices","recommended":true,"url":"https://eslint.org/docs/rules/no-case-declarations"},{"name":"no-catch-shadow","type":"suggestion","description":"disallow `catch` clause parameters from shadowing variables in the outer scope","category":"Variables","recommended":null,"url":"https://eslint.org/docs/rules/no-catch-shadow"},{"name":"no-class-assign","type":"problem","description":"disallow reassigning class members","category":"ECMAScript 6","recommended":true,"url":"https://eslint.org/docs/rules/no-class-assign"},{"name":"no-compare-neg-zero","type":"problem","description":"disallow comparing against -0","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-compare-neg-zero"},{"name":"no-cond-assign","type":"problem","description":"disallow assignment operators in conditional expressions","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-cond-assign"},{"name":"no-confusing-arrow","type":"suggestion","description":"disallow arrow functions where they could be confused with comparisons","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/no-confusing-arrow"},{"name":"no-console","type":"suggestion","description":"disallow the use of `console`","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-console"},{"name":"no-const-assign","type":"problem","description":"disallow reassigning `const` variables","category":"ECMAScript 6","recommended":true,"url":"https://eslint.org/docs/rules/no-const-assign"},{"name":"no-constant-condition","type":"problem","description":"disallow constant expressions in conditions","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-constant-condition"},{"name":"no-continue","type":"suggestion","description":"disallow `continue` statements","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-continue"},{"name":"no-control-regex","type":"problem","description":"disallow control characters in regular expressions","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-control-regex"},{"name":"no-debugger","type":"problem","description":"disallow the use of `debugger`","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-debugger"},{"name":"no-delete-var","type":"suggestion","description":"disallow deleting variables","category":"Variables","recommended":true,"url":"https://eslint.org/docs/rules/no-delete-var"},{"name":"no-div-regex","type":"suggestion","description":"disallow division operators explicitly at the beginning of regular expressions","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-div-regex"},{"name":"no-dupe-args","type":"problem","description":"disallow duplicate arguments in `function` definitions","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-dupe-args"},{"name":"no-dupe-class-members","type":"problem","description":"disallow duplicate class members","category":"ECMAScript 6","recommended":true,"url":"https://eslint.org/docs/rules/no-dupe-class-members"},{"name":"no-dupe-keys","type":"problem","description":"disallow duplicate keys in object literals","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-dupe-keys"},{"name":"no-duplicate-case","type":"problem","description":"disallow duplicate case labels","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-duplicate-case"},{"name":"no-duplicate-imports","type":"problem","description":"disallow duplicate module imports","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/no-duplicate-imports"},{"name":"no-else-return","type":"suggestion","description":"disallow `else` blocks after `return` statements in `if` statements","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-else-return"},{"name":"no-empty-character-class","type":"problem","description":"disallow empty character classes in regular expressions","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-empty-character-class"},{"name":"no-empty-function","type":"suggestion","description":"disallow empty functions","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-empty-function"},{"name":"no-empty-pattern","type":"problem","description":"disallow empty destructuring patterns","category":"Best Practices","recommended":true,"url":"https://eslint.org/docs/rules/no-empty-pattern"},{"name":"no-empty","type":"suggestion","description":"disallow empty block statements","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-empty"},{"name":"no-eq-null","type":"suggestion","description":"disallow `null` comparisons without type-checking operators","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-eq-null"},{"name":"no-eval","type":"suggestion","description":"disallow the use of `eval()`","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-eval"},{"name":"no-ex-assign","type":"problem","description":"disallow reassigning exceptions in `catch` clauses","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-ex-assign"},{"name":"no-extend-native","type":"suggestion","description":"disallow extending native types","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-extend-native"},{"name":"no-extra-bind","type":"suggestion","description":"disallow unnecessary calls to `.bind()`","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-extra-bind"},{"name":"no-extra-boolean-cast","type":"suggestion","description":"disallow unnecessary boolean casts","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-extra-boolean-cast"},{"name":"no-extra-label","type":"suggestion","description":"disallow unnecessary labels","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-extra-label"},{"name":"no-extra-parens","type":"layout","description":"disallow unnecessary parentheses","category":"Possible Errors","recommended":null,"url":"https://eslint.org/docs/rules/no-extra-parens"},{"name":"no-extra-semi","type":"suggestion","description":"disallow unnecessary semicolons","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-extra-semi"},{"name":"no-fallthrough","type":"problem","description":"disallow fallthrough of `case` statements","category":"Best Practices","recommended":true,"url":"https://eslint.org/docs/rules/no-fallthrough"},{"name":"no-floating-decimal","type":"suggestion","description":"disallow leading or trailing decimal points in numeric literals","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-floating-decimal"},{"name":"no-func-assign","type":"problem","description":"disallow reassigning `function` declarations","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-func-assign"},{"name":"no-global-assign","type":"suggestion","description":"disallow assignments to native objects or read-only global variables","category":"Best Practices","recommended":true,"url":"https://eslint.org/docs/rules/no-global-assign"},{"name":"no-implicit-coercion","type":"suggestion","description":"disallow shorthand type conversions","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-implicit-coercion"},{"name":"no-implicit-globals","type":"suggestion","description":"disallow variable and `function` declarations in the global scope","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-implicit-globals"},{"name":"no-implied-eval","type":"suggestion","description":"disallow the use of `eval()`-like methods","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-implied-eval"},{"name":"no-inline-comments","type":"suggestion","description":"disallow inline comments after code","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-inline-comments"},{"name":"no-inner-declarations","type":"problem","description":"disallow variable or `function` declarations in nested blocks","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-inner-declarations"},{"name":"no-invalid-regexp","type":"problem","description":"disallow invalid regular expression strings in `RegExp` constructors","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-invalid-regexp"},{"name":"no-invalid-this","type":"suggestion","description":"disallow `this` keywords outside of classes or class-like objects","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-invalid-this"},{"name":"no-irregular-whitespace","type":"problem","description":"disallow irregular whitespace outside of strings and comments","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-irregular-whitespace"},{"name":"no-iterator","type":"suggestion","description":"disallow the use of the `__iterator__` property","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-iterator"},{"name":"no-label-var","type":"suggestion","description":"disallow labels that share a name with a variable","category":"Variables","recommended":null,"url":"https://eslint.org/docs/rules/no-label-var"},{"name":"no-labels","type":"suggestion","description":"disallow labeled statements","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-labels"},{"name":"no-lone-blocks","type":"suggestion","description":"disallow unnecessary nested blocks","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-lone-blocks"},{"name":"no-lonely-if","type":"suggestion","description":"disallow `if` statements as the only statement in `else` blocks","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-lonely-if"},{"name":"no-loop-func","type":"suggestion","description":"disallow `function` declarations and expressions inside loop statements","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-loop-func"},{"name":"no-magic-numbers","type":"suggestion","description":"disallow magic numbers","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-magic-numbers"},{"name":"no-misleading-character-class","type":"problem","description":"disallow characters which are made with multiple code points in character class syntax","category":"Possible Errors","recommended":null,"url":"https://eslint.org/docs/rules/no-misleading-character-class"},{"name":"no-mixed-operators","type":"suggestion","description":"disallow mixed binary operators","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-mixed-operators"},{"name":"no-mixed-requires","type":"suggestion","description":"disallow `require` calls to be mixed with regular variable declarations","category":"Node.js and CommonJS","recommended":null,"url":"https://eslint.org/docs/rules/no-mixed-requires"},{"name":"no-mixed-spaces-and-tabs","type":"layout","description":"disallow mixed spaces and tabs for indentation","category":"Stylistic Issues","recommended":true,"url":"https://eslint.org/docs/rules/no-mixed-spaces-and-tabs"},{"name":"no-multi-assign","type":"suggestion","description":"disallow use of chained assignment expressions","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-multi-assign"},{"name":"no-multi-spaces","type":"layout","description":"disallow multiple spaces","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-multi-spaces"},{"name":"no-multi-str","type":"suggestion","description":"disallow multiline strings","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-multi-str"},{"name":"no-multiple-empty-lines","type":"layout","description":"disallow multiple empty lines","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-multiple-empty-lines"},{"name":"no-native-reassign","type":"suggestion","description":"disallow assignments to native objects or read-only global variables","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-native-reassign"},{"name":"no-negated-condition","type":"suggestion","description":"disallow negated conditions","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-negated-condition"},{"name":"no-negated-in-lhs","type":"problem","description":"disallow negating the left operand in `in` expressions","category":"Possible Errors","recommended":null,"url":"https://eslint.org/docs/rules/no-negated-in-lhs"},{"name":"no-nested-ternary","type":"suggestion","description":"disallow nested ternary expressions","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-nested-ternary"},{"name":"no-new-func","type":"suggestion","description":"disallow `new` operators with the `Function` object","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-new-func"},{"name":"no-new-object","type":"suggestion","description":"disallow `Object` constructors","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-new-object"},{"name":"no-new-require","type":"suggestion","description":"disallow `new` operators with calls to `require`","category":"Node.js and CommonJS","recommended":null,"url":"https://eslint.org/docs/rules/no-new-require"},{"name":"no-new-symbol","type":"problem","description":"disallow `new` operators with the `Symbol` object","category":"ECMAScript 6","recommended":true,"url":"https://eslint.org/docs/rules/no-new-symbol"},{"name":"no-new-wrappers","type":"suggestion","description":"disallow `new` operators with the `String`, `Number`, and `Boolean` objects","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-new-wrappers"},{"name":"no-new","type":"suggestion","description":"disallow `new` operators outside of assignments or comparisons","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-new"},{"name":"no-obj-calls","type":"problem","description":"disallow calling global object properties as functions","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-obj-calls"},{"name":"no-octal-escape","type":"suggestion","description":"disallow octal escape sequences in string literals","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-octal-escape"},{"name":"no-octal","type":"suggestion","description":"disallow octal literals","category":"Best Practices","recommended":true,"url":"https://eslint.org/docs/rules/no-octal"},{"name":"no-param-reassign","type":"suggestion","description":"disallow reassigning `function` parameters","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-param-reassign"},{"name":"no-path-concat","type":"suggestion","description":"disallow string concatenation with `__dirname` and `__filename`","category":"Node.js and CommonJS","recommended":null,"url":"https://eslint.org/docs/rules/no-path-concat"},{"name":"no-plusplus","type":"suggestion","description":"disallow the unary operators `++` and `--`","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-plusplus"},{"name":"no-process-env","type":"suggestion","description":"disallow the use of `process.env`","category":"Node.js and CommonJS","recommended":null,"url":"https://eslint.org/docs/rules/no-process-env"},{"name":"no-process-exit","type":"suggestion","description":"disallow the use of `process.exit()`","category":"Node.js and CommonJS","recommended":null,"url":"https://eslint.org/docs/rules/no-process-exit"},{"name":"no-proto","type":"suggestion","description":"disallow the use of the `__proto__` property","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-proto"},{"name":"no-prototype-builtins","type":"problem","description":"disallow calling some `Object.prototype` methods directly on objects","category":"Possible Errors","recommended":null,"url":"https://eslint.org/docs/rules/no-prototype-builtins"},{"name":"no-redeclare","type":"suggestion","description":"disallow variable redeclaration","category":"Best Practices","recommended":true,"url":"https://eslint.org/docs/rules/no-redeclare"},{"name":"no-regex-spaces","type":"suggestion","description":"disallow multiple spaces in regular expressions","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-regex-spaces"},{"name":"no-restricted-globals","type":"suggestion","description":"disallow specified global variables","category":"Variables","recommended":null,"url":"https://eslint.org/docs/rules/no-restricted-globals"},{"name":"no-restricted-imports","type":"suggestion","description":"disallow specified modules when loaded by `import`","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/no-restricted-imports"},{"name":"no-restricted-modules","type":"suggestion","description":"disallow specified modules when loaded by `require`","category":"Node.js and CommonJS","recommended":null,"url":"https://eslint.org/docs/rules/no-restricted-modules"},{"name":"no-restricted-properties","type":"suggestion","description":"disallow certain properties on certain objects","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-restricted-properties"},{"name":"no-restricted-syntax","type":"suggestion","description":"disallow specified syntax","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-restricted-syntax"},{"name":"no-return-assign","type":"suggestion","description":"disallow assignment operators in `return` statements","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-return-assign"},{"name":"no-return-await","type":"suggestion","description":"disallow unnecessary `return await`","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-return-await"},{"name":"no-script-url","type":"suggestion","description":"disallow `javascript:` urls","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-script-url"},{"name":"no-self-assign","type":"problem","description":"disallow assignments where both sides are exactly the same","category":"Best Practices","recommended":true,"url":"https://eslint.org/docs/rules/no-self-assign"},{"name":"no-self-compare","type":"problem","description":"disallow comparisons where both sides are exactly the same","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-self-compare"},{"name":"no-sequences","type":"suggestion","description":"disallow comma operators","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-sequences"},{"name":"no-shadow-restricted-names","type":"suggestion","description":"disallow identifiers from shadowing restricted names","category":"Variables","recommended":null,"url":"https://eslint.org/docs/rules/no-shadow-restricted-names"},{"name":"no-shadow","type":"suggestion","description":"disallow variable declarations from shadowing variables declared in the outer scope","category":"Variables","recommended":null,"url":"https://eslint.org/docs/rules/no-shadow"},{"name":"no-spaced-func","type":"layout","description":"disallow spacing between function identifiers and their applications (deprecated)","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-spaced-func"},{"name":"no-sparse-arrays","type":"problem","description":"disallow sparse arrays","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-sparse-arrays"},{"name":"no-sync","type":"suggestion","description":"disallow synchronous methods","category":"Node.js and CommonJS","recommended":null,"url":"https://eslint.org/docs/rules/no-sync"},{"name":"no-tabs","type":"layout","description":"disallow all tabs","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-tabs"},{"name":"no-template-curly-in-string","type":"problem","description":"disallow template literal placeholder syntax in regular strings","category":"Possible Errors","recommended":null,"url":"https://eslint.org/docs/rules/no-template-curly-in-string"},{"name":"no-ternary","type":"suggestion","description":"disallow ternary operators","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-ternary"},{"name":"no-this-before-super","type":"problem","description":"disallow `this`/`super` before calling `super()` in constructors","category":"ECMAScript 6","recommended":true,"url":"https://eslint.org/docs/rules/no-this-before-super"},{"name":"no-throw-literal","type":"suggestion","description":"disallow throwing literals as exceptions","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-throw-literal"},{"name":"no-trailing-spaces","type":"layout","description":"disallow trailing whitespace at the end of lines","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-trailing-spaces"},{"name":"no-undef-init","type":"suggestion","description":"disallow initializing variables to `undefined`","category":"Variables","recommended":null,"url":"https://eslint.org/docs/rules/no-undef-init"},{"name":"no-undef","type":"problem","description":"disallow the use of undeclared variables unless mentioned in `/*global */` comments","category":"Variables","recommended":true,"url":"https://eslint.org/docs/rules/no-undef"},{"name":"no-undefined","type":"suggestion","description":"disallow the use of `undefined` as an identifier","category":"Variables","recommended":null,"url":"https://eslint.org/docs/rules/no-undefined"},{"name":"no-underscore-dangle","type":"suggestion","description":"disallow dangling underscores in identifiers","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-underscore-dangle"},{"name":"no-unexpected-multiline","type":"problem","description":"disallow confusing multiline expressions","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-unexpected-multiline"},{"name":"no-unmodified-loop-condition","type":"problem","description":"disallow unmodified loop conditions","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-unmodified-loop-condition"},{"name":"no-unneeded-ternary","type":"suggestion","description":"disallow ternary operators when simpler alternatives exist","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-unneeded-ternary"},{"name":"no-unreachable","type":"problem","description":"disallow unreachable code after `return`, `throw`, `continue`, and `break` statements","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-unreachable"},{"name":"no-unsafe-finally","type":"problem","description":"disallow control flow statements in `finally` blocks","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-unsafe-finally"},{"name":"no-unsafe-negation","type":"problem","description":"disallow negating the left operand of relational operators","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/no-unsafe-negation"},{"name":"no-unused-expressions","type":"suggestion","description":"disallow unused expressions","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-unused-expressions"},{"name":"no-unused-labels","type":"suggestion","description":"disallow unused labels","category":"Best Practices","recommended":true,"url":"https://eslint.org/docs/rules/no-unused-labels"},{"name":"no-unused-vars","type":"problem","description":"disallow unused variables","category":"Variables","recommended":true,"url":"https://eslint.org/docs/rules/no-unused-vars"},{"name":"no-use-before-define","type":"problem","description":"disallow the use of variables before they are defined","category":"Variables","recommended":null,"url":"https://eslint.org/docs/rules/no-use-before-define"},{"name":"no-useless-call","type":"suggestion","description":"disallow unnecessary calls to `.call()` and `.apply()`","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-useless-call"},{"name":"no-useless-computed-key","type":"suggestion","description":"disallow unnecessary computed property keys in object literals","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/no-useless-computed-key"},{"name":"no-useless-concat","type":"suggestion","description":"disallow unnecessary concatenation of literals or template literals","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-useless-concat"},{"name":"no-useless-constructor","type":"suggestion","description":"disallow unnecessary constructors","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/no-useless-constructor"},{"name":"no-useless-escape","type":"suggestion","description":"disallow unnecessary escape characters","category":"Best Practices","recommended":true,"url":"https://eslint.org/docs/rules/no-useless-escape"},{"name":"no-useless-rename","type":"suggestion","description":"disallow renaming import, export, and destructured assignments to the same name","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/no-useless-rename"},{"name":"no-useless-return","type":"suggestion","description":"disallow redundant return statements","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-useless-return"},{"name":"no-var","type":"suggestion","description":"require `let` or `const` instead of `var`","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/no-var"},{"name":"no-void","type":"suggestion","description":"disallow `void` operators","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-void"},{"name":"no-warning-comments","type":"suggestion","description":"disallow specified warning terms in comments","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-warning-comments"},{"name":"no-whitespace-before-property","type":"layout","description":"disallow whitespace before properties","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/no-whitespace-before-property"},{"name":"no-with","type":"suggestion","description":"disallow `with` statements","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/no-with"},{"name":"nonblock-statement-body-position","type":"layout","description":"enforce the location of single-line statements","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/nonblock-statement-body-position"},{"name":"object-curly-newline","type":"layout","description":"enforce consistent line breaks inside braces","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/object-curly-newline"},{"name":"object-curly-spacing","type":"layout","description":"enforce consistent spacing inside braces","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/object-curly-spacing"},{"name":"object-property-newline","type":"layout","description":"enforce placing object properties on separate lines","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/object-property-newline"},{"name":"object-shorthand","type":"suggestion","description":"require or disallow method and property shorthand syntax for object literals","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/object-shorthand"},{"name":"one-var-declaration-per-line","type":"suggestion","description":"require or disallow newlines around variable declarations","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/one-var-declaration-per-line"},{"name":"one-var","type":"suggestion","description":"enforce variables to be declared either together or separately in functions","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/one-var"},{"name":"operator-assignment","type":"suggestion","description":"require or disallow assignment operator shorthand where possible","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/operator-assignment"},{"name":"operator-linebreak","type":"layout","description":"enforce consistent linebreak style for operators","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/operator-linebreak"},{"name":"padded-blocks","type":"layout","description":"require or disallow padding within blocks","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/padded-blocks"},{"name":"padding-line-between-statements","type":"layout","description":"require or disallow padding lines between statements","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/padding-line-between-statements"},{"name":"prefer-arrow-callback","type":"suggestion","description":"require using arrow functions for callbacks","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/prefer-arrow-callback"},{"name":"prefer-const","type":"suggestion","description":"require `const` declarations for variables that are never reassigned after declared","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/prefer-const"},{"name":"prefer-destructuring","type":"suggestion","description":"require destructuring from arrays and/or objects","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/prefer-destructuring"},{"name":"prefer-numeric-literals","type":"suggestion","description":"disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/prefer-numeric-literals"},{"name":"prefer-object-spread","type":"suggestion","description":"disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead.","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/prefer-object-spread"},{"name":"prefer-promise-reject-errors","type":"suggestion","description":"require using Error objects as Promise rejection reasons","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/prefer-promise-reject-errors"},{"name":"prefer-reflect","type":"suggestion","description":"require `Reflect` methods where applicable","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/prefer-reflect"},{"name":"prefer-rest-params","type":"suggestion","description":"require rest parameters instead of `arguments`","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/prefer-rest-params"},{"name":"prefer-spread","type":"suggestion","description":"require spread operators instead of `.apply()`","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/prefer-spread"},{"name":"prefer-template","type":"suggestion","description":"require template literals instead of string concatenation","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/prefer-template"},{"name":"quote-props","type":"suggestion","description":"require quotes around object literal property names","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/quote-props"},{"name":"quotes","type":"layout","description":"enforce the consistent use of either backticks, double, or single quotes","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/quotes"},{"name":"radix","type":"suggestion","description":"enforce the consistent use of the radix argument when using `parseInt()`","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/radix"},{"name":"require-atomic-updates","type":"problem","description":"disallow assignments that can lead to race conditions due to usage of `await` or `yield`","category":"Possible Errors","recommended":null,"url":"https://eslint.org/docs/rules/require-atomic-updates"},{"name":"require-await","type":"suggestion","description":"disallow async functions which have no `await` expression","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/require-await"},{"name":"require-jsdoc","type":"suggestion","description":"require JSDoc comments","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/require-jsdoc"},{"name":"require-unicode-regexp","type":"suggestion","description":"enforce the use of `u` flag on RegExp","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/require-unicode-regexp"},{"name":"require-yield","type":"suggestion","description":"require generator functions to contain `yield`","category":"ECMAScript 6","recommended":true,"url":"https://eslint.org/docs/rules/require-yield"},{"name":"rest-spread-spacing","type":"layout","description":"enforce spacing between rest and spread operators and their expressions","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/rest-spread-spacing"},{"name":"semi-spacing","type":"layout","description":"enforce consistent spacing before and after semicolons","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/semi-spacing"},{"name":"semi-style","type":"layout","description":"enforce location of semicolons","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/semi-style"},{"name":"semi","type":"layout","description":"require or disallow semicolons instead of ASI","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/semi"},{"name":"sort-imports","type":"suggestion","description":"enforce sorted import declarations within modules","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/sort-imports"},{"name":"sort-keys","type":"suggestion","description":"require object keys to be sorted","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/sort-keys"},{"name":"sort-vars","type":"suggestion","description":"require variables within the same declaration block to be sorted","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/sort-vars"},{"name":"space-before-blocks","type":"layout","description":"enforce consistent spacing before blocks","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/space-before-blocks"},{"name":"space-before-function-paren","type":"layout","description":"enforce consistent spacing before `function` definition opening parenthesis","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/space-before-function-paren"},{"name":"space-in-parens","type":"layout","description":"enforce consistent spacing inside parentheses","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/space-in-parens"},{"name":"space-infix-ops","type":"layout","description":"require spacing around infix operators","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/space-infix-ops"},{"name":"space-unary-ops","type":"layout","description":"enforce consistent spacing before or after unary operators","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/space-unary-ops"},{"name":"spaced-comment","type":"suggestion","description":"enforce consistent spacing after the `//` or `/*` in a comment","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/spaced-comment"},{"name":"strict","type":"suggestion","description":"require or disallow strict mode directives","category":"Strict Mode","recommended":null,"url":"https://eslint.org/docs/rules/strict"},{"name":"switch-colon-spacing","type":"layout","description":"enforce spacing around colons of switch statements","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/switch-colon-spacing"},{"name":"symbol-description","type":"suggestion","description":"require symbol descriptions","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/symbol-description"},{"name":"template-curly-spacing","type":"layout","description":"require or disallow spacing around embedded expressions of template strings","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/template-curly-spacing"},{"name":"template-tag-spacing","type":"layout","description":"require or disallow spacing between template tags and their literals","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/template-tag-spacing"},{"name":"unicode-bom","type":"layout","description":"require or disallow Unicode byte order mark (BOM)","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/unicode-bom"},{"name":"use-isnan","type":"problem","description":"require calls to `isNaN()` when checking for `NaN`","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/use-isnan"},{"name":"valid-jsdoc","type":"suggestion","description":"enforce valid JSDoc comments","category":"Possible Errors","recommended":null,"url":"https://eslint.org/docs/rules/valid-jsdoc"},{"name":"valid-typeof","type":"problem","description":"enforce comparing `typeof` expressions against valid strings","category":"Possible Errors","recommended":true,"url":"https://eslint.org/docs/rules/valid-typeof"},{"name":"vars-on-top","type":"suggestion","description":"require `var` declarations be placed at the top of their containing scope","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/vars-on-top"},{"name":"wrap-iife","type":"layout","description":"require parentheses around immediate `function` invocations","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/wrap-iife"},{"name":"wrap-regex","type":"layout","description":"require parenthesis around regex literals","category":"Stylistic Issues","recommended":null,"url":"https://eslint.org/docs/rules/wrap-regex"},{"name":"yield-star-spacing","type":"layout","description":"require or disallow spacing around the `*` in `yield*` expressions","category":"ECMAScript 6","recommended":null,"url":"https://eslint.org/docs/rules/yield-star-spacing"},{"name":"yoda","type":"suggestion","description":"require or disallow \"Yoda\" conditions","category":"Best Practices","recommended":null,"url":"https://eslint.org/docs/rules/yoda"}]